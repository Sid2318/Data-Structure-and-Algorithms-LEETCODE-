/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
private:
    void binaryPath(TreeNode* root, vector<string>& s, string a) {
        if(root== NULL){
            return;
        }

        if(!a.empty()){
            a += "->";
        }
        a += to_string(root->val);

        if (root->left == NULL && root->right == NULL) {
            s.push_back(a);
            return;
        }

        // cout << a << endl;
        binaryPath(root->left, s, a);
        binaryPath(root->right, s, a);
    }

public:
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> s;
        binaryPath(root, s, "");
        return s;
    }
};
